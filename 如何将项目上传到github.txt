1、创建象奴文件夹并进入
2、git init 初始化git
3、git status;这个命令将会用红色字体列出这个项目的文件夹和文件名还会提示你用 git add <filename> 提交
4、git add *  将本地工作区的文件提交到暂存区

5、git status 这个项目的文件夹和文件变成绿色并且有new files标志；提示用 git rm --cached <file> 删除暂存区文件注意无 --cached会将本地工作区的实体文件也一起删除

6、git commit -m '本次提交的描述'   将暂存区的内容提交到本地仓库（如果在之前没有新建本地仓库分支或者没有切换那么提交到本地的默认仓库master）

7、生成ssh key并填入github并在github创建远程仓库gittest（地址https://github.com/lichihua/gittest.git）

8、git remote add remoteOrigin https://github.com/lichihua/gittest.git 为远程仓库起别名关联远程仓库的地址方便push（注意不是分支哦）

查看分支  
git remote -v  【没有push之前】只能看到远程
查看本地分支  git branch
查看远程分支  git branch -a  【没有push之前】还是本地的 这里的远程分支指的是本地保存的远程跟踪分支；可以通过get fetch将本地远程跟踪分支进行更新，与远程分支保持一致；

8.将本地仓库master内容推送到远程仓库remoteOrigin
 git push -u remoteOrigin master

$ git push -u remoteOrigin master
Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (5/5), 358 bytes | 179.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0)
To https://github.com/lichihua/gittest.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'remoteOrigin'.

注意：
 另外，这里有个坑需要注意一下，就是在上面第七步创建远程仓库的时候，如果你勾选了Initialize this repository with a README（就是创建仓库的时候自动给你创建一个README文件），那么到了第九步你将本地仓库内容推送到远程仓库的时候就会报一个failed to push some refs to  https://github.com/guyibang/TEST2.git的错
  这是由于你新创建的那个仓库里面的README文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并以下：
  git pull --rebase origin master
  这时你再push就能成功了。




  其他：
  git 删除本地分支和远程分支、本地代码回滚和远程代码库回滚
【git 删除本地分支】

git branch -D br

 

【git 删除远程分支】

git push origin :br  (origin 后面有空格)

 

git代码库回滚: 指的是将代码库某分支退回到以前的某个commit id

【本地代码库回滚】：

git reset --hard commit-id :回滚到commit-id，讲commit-id之后提交的commit都去除

git reset --hard HEAD~3：将最近3次的提交回滚

 

【远程代码库回滚】：

这个是重点要说的内容，过程比本地回滚要复杂

应用场景：自动部署系统发布后发现问题，需要回滚到某一个commit，再重新发布

原理：先将本地分支退回到某个commit，删除远程分支，再重新push本地分支

操作步骤：

1、git checkout the_branch

2、git pull

3、git branch the_branch_backup //备份一下这个分支当前的情况

4、git reset --hard the_commit_id //把the_branch本地回滚到the_commit_id

5、git push origin :the_branch //删除远程 the_branch

6、git push origin the_branch //用回滚后的本地分支重新建立远程分支

7、git push origin :the_branch_backup //如果前面都成功了，删除这个备份分支

如果使用了gerrit做远程代码中心库和code review平台，需要确保操作git的用户具备分支的push权限，并且选择了 Force Push选项（在push权限设置里有这个选项）

另外，gerrit中心库是个bare库，将HEAD默认指向了master，因此master分支是不能进行删除操作的，最好不要选择删除master分支的策略，换用其他分支。如果一定要这样做，可以考虑到gerrit服务器上修改HEAD指针。。。不建议这样搞


当我们错误的 把不需要版本控制的文件提交到远程分支上后，需要删除远程分支上的文件，用以下操作即可： 
git rm -r –cached dirname //删除远程文件夹，但保留本地文件夹 
git commit -m ‘say something’ //提交操作，并添加描述 
git push origin master //推送

当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用

git rm file_path

当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制, 可以使用

git rm –cached file_path